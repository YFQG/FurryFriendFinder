@using FurryFriendFinder.Models.Data;
@using Newtonsoft.Json;
<!--Link and script added to Layout-->
@model Pet

@{
    Layout = "_LayoutPetSitter";
    ViewData["Title"] = "Adoption";
}

<h1>@ViewData["Title"]</h1>

<div>
    <h4>Pet</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PetImage)
        </dt>
        <dd class="col-sm-10">
            <img class="card-img-top w-25" src="data:image/png;base64,@Convert.ToBase64String(Model.PetImage)" />
        </dd>
        <!--Display and label the properties of the Pet model-->
        <!--Each dt represents the property name and each dd shows the corresponding value-->
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PetName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PetName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <!--Other properties of model Pet-->
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BirthYear)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BirthYear)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IdBreedNavigation.Breed1)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IdBreedNavigation.Breed1)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IdAnimalTypeNavigation.Type)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IdAnimalTypeNavigation.Type)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IdStateHealthNavigation.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IdStateHealthNavigation.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IdStateHealthNavigation.Castrated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IdStateHealthNavigation.Castrated)
        </dd>
        @foreach (var vacc in Model.Vaccines)
        {
            <!--Show the vaccines for the pet-->
            <dt class="col-sm-2">
                @nameof(Vaccine)
            </dt>
            <dd class="col-sm-10">
                @vacc.TypeVaccine
            </dd>

            <dt class="col-sm-2">
                @nameof(vacc.VaccinationDate)
            </dt>
            <dd class="col-sm-10">
                @vacc.VaccinationDate
            </dd>
        }


</div>
<div class="row">
    <!--Form to generate the adoption certificate-->
    <form asp-action="AdoptionCertificate" method="post">

        <input type="hidden" name="pet" value="@Model.PetName" />
        <!--Hidden field for pet name-->

        <div class="ui-widget">
            <!--Input field for customer name-->
            <LABEL>Enter the client who will adopt the pet.</LABEL>
            <input type="text" name="user" id="user" required/>
        </div>
        <div class="form-group">
            <!--Button to submit the adoption request-->
            <input type="submit" value="Adopt" class="btn btn-primary" />
        </div>
    </form>
</div>
<div>|
    <a asp-action="Pets">Back to List</a>
</div>

@section scripts{
    <script>
        $("#user").autocomplete({
            source: '@Url.Action("GetUsers", "PetSitter")',//Route to where you should go
            minlenght: 2, //minimum letters you need to get to autocomplete
        });
    </script>
}
